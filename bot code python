import discord
from discord.ext import commands
from discord.ext.commands import BucketType
import aiohttp
import asyncio

TOKEN = ""

intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

API_LIKE = "https://huutri.id.vn/api/freefire/like?uid={}"
API_INFO = "https://huutri.id.vn/api/freefire/info?uid={}"


# ==== SỰ KIỆN ====
@bot.event
async def on_ready():
    print(f"✅ Bot đã đăng nhập thành công dưới tên {bot.user}")


# ==== COMMAND: LẤY INFO UID ====
@bot.command()
async def info(ctx, uid: str):
    """Lấy thông tin tài khoản Free Fire theo UID"""
    url = API_INFO.format(uid)
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(url, timeout=10) as resp:
                if resp.status != 200:
                    return await ctx.send("❌ API lỗi hoặc không truy cập được!")

                data = await resp.json()

                basic = data.get("basicInfo", {})
                nickname = basic.get("nickname", "Không rõ")
                level = basic.get("level", "?")
                liked = basic.get("liked", "?")

                msg = (
                    f"🎮 **Thông tin Free Fire**\n"
                    f"👤 Tên: {nickname}\n"
                    f"⭐ Level: {level}\n"
                    f"👍 Like: {liked}"
                )
                await ctx.send(msg)

        except Exception as e:
            await ctx.send(f"⚠️ Lỗi: {e}")


# ==== COMMAND: TĂNG LIKE ====
@bot.command()
async def like(ctx, uid: str):
    """Tăng like cho UID"""
    url = API_LIKE.format(uid)
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(url, timeout=10) as resp:
                if resp.status != 200:
                    return await ctx.send("❌ Không thể gọi API!")

                data = await resp.json()
                if "likes" in data:
                    before = data["likes"]["before"]
                    after = data["likes"]["after"]
                    added = data["likes"]["added_by_api"]

                    msg = (
                        f"✅ Like thành công!\n"
                        f"👤 UID: {uid}\n"
                        f"👍 Trước: {before} → Sau: {after} (+{added})"
                    )
                    await ctx.send(msg)
                else:
                    await ctx.send("❌ API không trả dữ liệu hợp lệ!")

        except Exception as e:
            await ctx.send(f"⚠️ Lỗi: {e}")


# ==== COMMAND: SPAM LIKE ====
@bot.command()
@commands.cooldown(rate=1, per=5, type=BucketType.user)  # cooldown 5s mỗi user
async def spamlike(ctx, uid: str, times: int = 5):
    """Spam tăng like nhiều lần cho UID"""
    url = API_LIKE.format(uid)
    async with aiohttp.ClientSession() as session:
        for i in range(times):
            try:
                async with session.get(url, timeout=10) as resp:
                    if resp.status == 200:
                        data = await resp.json()
                        after = data.get("likes", {}).get("after", "?")
                        await ctx.send(f"🔥 {i+1}/{times} → UID {uid} Like hiện tại: {after}")
                    else:
                        await ctx.send(f"❌ API lỗi ở lần {i+1}")
            except Exception as e:
                await ctx.send(f"⚠️ Lỗi ở lần {i+1}: {e}")
            await asyncio.sleep(1)  # delay 1s mỗi lần tránh spam quá nhanh


# ==== CHẠY BOT ====
bot.run(TOKEN)